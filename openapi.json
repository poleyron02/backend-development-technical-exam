{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/upload": {
            "post": {
                "summary": "Upload File",
                "description": "Uploads a CSV file to the server.\n\nArgs:\n    `file (UploadFile)`: The file to be uploaded. Must be a CSV file.\nRaises:\n    `HTTPException`: If the file is not a CSV file or if there is an error reading the CSV file.\n    `HTTPException`: If there is an error saving the file to the server.\nReturns:\n    `dict`: A dictionary containing a success message and the filename of the uploaded file.",
                "operationId": "upload_file_upload_post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_file_upload_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/aggregated_stats/event": {
            "get": {
                "summary": "Get Aggregated Stats",
                "description": "Retrieve aggregated statistics of medalists grouped by discipline, event, and event date.\n\nArgs:\n    `page (int)`: The page number for pagination. Defaults to 1. Must be greater than or equal to 1.\n    `page_size (int)`: The number of records per page. Defaults to 10.\nReturns:\n    `dict`: A dictionary containing the following keys:\n\n                - `data (list)`: A list of EventStats objects containing the aggregated statistics.\n                - `paginate (dict)`: A dictionary containing pagination information:\n            \n                    - `current_page (int)`: The current page number.\n                    - `total_pages (int)`: The total number of pages.\n                    - `next_page (str or None)`: The URL for the next page, if it exists.\n                    - `previous_page (str or None)`: The URL for the previous page, if it exists.\nRaises:\n    `HTTPException`: If an error occurs during the aggregation process, an HTTP 500 error is raised with the error details.",
                "operationId": "get_aggregated_stats_aggregated_stats_event_get",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Page Size"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Body_upload_file_upload_post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_upload_file_upload_post"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}